{
  "comments": [
    {
      "key": {
        "uuid": "6471fd8d_afff02b8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-02-26T10:35:20Z",
      "side": 1,
      "message": "Is it possible to add a screenshoot to see how the new dashboard would look like?",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0db86fa8_1fdb75b3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-01T00:34:32Z",
      "side": 1,
      "message": "will add one, this is why I asked you to help me in review this change, since it is definitely not obvious for me how to deal with Kibana changes.",
      "parentUuid": "6471fd8d_afff02b8",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c86f23d_df4ddf93",
        "filename": "README.md",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-02-26T10:35:20Z",
      "side": 1,
      "message": "White space :P",
      "range": {
        "startLine": 30,
        "startChar": 12,
        "endLine": 30,
        "endChar": 13
      },
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d25307c_c670ed2d",
        "filename": "README.md",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-02-26T10:35:20Z",
      "side": 1,
      "message": "Question: is the ETL that needs more memory or the analytics plugin?",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 24
      },
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee058b8c_bea6b738",
        "filename": "README.md",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-02-26T14:08:53Z",
      "side": 1,
      "message": "Yes, and how much? I would avoid mentioning it IF we are not specific about how much. What is the reader supposed to do? How much more memory would he need? Is it needed for every scenarios?",
      "parentUuid": "9d25307c_c670ed2d",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 24
      },
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9452e767_820148c4",
        "filename": "README.md",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-01T00:34:32Z",
      "side": 1,
      "message": "will remove the reference tomorrow with a different change.",
      "parentUuid": "ee058b8c_bea6b738",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 24
      },
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98a79245_7c0bb49c",
        "filename": "build.sbt",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-02-26T10:35:20Z",
      "side": 1,
      "message": "Just a curiosity: Why did you pick `Scalaz` over `Cats` ?",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96719617_c76034be",
        "filename": "build.sbt",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-01T00:34:32Z",
      "side": 1,
      "message": "don\u0027t have any particular preference, I just wanted to avoid writing over and over something like the nullable java Boolean lifting to Option[Boolean] and scalaz seemed to be one of the standard solutions to that. If you have an example of this in cats probably this would be more lightweight than in scalaz, but I wasnt lucky in finding it on cats sources..\nAnyway I think that will submit a change without depending on external libs since we just need a 3 line implicit class.",
      "parentUuid": "98a79245_7c0bb49c",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdc8eb14_275b5a95",
        "filename": "build.sbt",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-03-02T00:00:17Z",
      "side": 1,
      "message": "I didn\u0027t manage to find the equivalent in cats :( Anyway scalaz does the job.",
      "parentUuid": "96719617_c76034be",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9669ada7_9c9f0d72",
        "filename": "build.sbt",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-02T00:17:39Z",
      "side": 1,
      "message": "I am going to substitute with the simple class \nimplicit class RichBoolean(val b: Boolean) extends AnyVal {\n  final def option[A](a: \u003d\u003e A): Option[A] \u003d if (b) Some(a) else None\n}\nas described by https://stackoverflow.com/questions/19690531/scala-boolean-to-option",
      "parentUuid": "fdc8eb14_275b5a95",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9b71d69_0f100754",
        "filename": "dashboard-importer/kibana-config/000_config.json",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-02-26T10:35:20Z",
      "side": 1,
      "message": "Ordering of the json imported is important, i.e.: this has always to be the first file imported, followed by the index-pattern, etc.\n\nI believe it should be fine with this naming convention, but can you double check the import ordering is ok?",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "859bc192_bd1630b3",
        "filename": "dashboard-importer/kibana-config/000_config.json",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-02-26T10:35:20Z",
      "side": 1,
      "message": "Shall we move the file renaming in a different changset ?",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a46fa0d0_b652857c",
        "filename": "dashboard-importer/kibana-config/000_config.json",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-02-26T14:08:53Z",
      "side": 1,
      "message": "Yep. I\u0027m lost on why we need to rename all files :-O",
      "parentUuid": "859bc192_bd1630b3",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e36c843_e0df02d6",
        "filename": "dashboard-importer/kibana-config/000_config.json",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-01T00:34:32Z",
      "side": 1,
      "message": "It seems that all the json files must be submitted to Kibana importer using a specific order. @Fabio did use the AA_ BB_ CC_ DD_ redundant ordering metaphor (I did mention it in the original change proposing the import), but this is not correctly conveying an ordered structure. This change needs to add some intermediate json file. Numbers are better than double letters in ensuring a correct ordering. \nI\u0027m not an expert in Kibana Elasticsearch importer, so I need advice from you on how to add a new file. I find that using AA1_something.json would be immensely awkward. Created the new change 163330 with this proposal",
      "parentUuid": "a46fa0d0_b652857c",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "694a32af_ad2149d6",
        "filename": "dashboard-importer/kibana-config/000_config.json",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-03-02T00:00:17Z",
      "side": 1,
      "message": "I used double letters because I thought that if we wanted to add files in between one another we could have done something like:\n\nAA\nAB \u003c- new file\nBB\n\nSee my comment in 163330 about ordering with numbers.",
      "parentUuid": "6e36c843_e0df02d6",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9348283_e4b75738",
        "filename": "dashboard-importer/kibana-config/000_config.json",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-02T00:17:39Z",
      "side": 1,
      "message": "In such case why don\u0027t simply use A0 B0 instead of AA BB? What about ZZ? it cant\u0027 be extended since it is on the lower side. Ordering it is intuitely expressed by numbering you said the first the second the third, not the A, B or C. If I can accept to use A-Z as first character, it is very awkward to me using double letter (!) because of the triangular limitation (ZZ doesnt accept successor, while YY accepts only YZ as additional before going to ZZ.\nWhat if you need to insert an additional item after YZ?",
      "parentUuid": "694a32af_ad2149d6",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "257335e2_d4252a8e",
        "filename": "dashboard-importer/kibana-config/002_dashboard_projects.json",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-02-26T10:35:20Z",
      "side": 1,
      "message": "Looks like you changed the order you are importing the Kibana files. Can you double check it is fine? Logically the `Visualizations` creation should go first, but practically it might not make any difference.",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6fa1142_13d8dc83",
        "filename": "dashboard-importer/kibana-config/002_dashboard_projects.json",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-01T00:34:32Z",
      "side": 1,
      "message": "mmmm thanks for noticing this. Will fix  this.",
      "parentUuid": "257335e2_d4252a8e",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1dae053_32710a77",
        "filename": "src/main/scala/com/gerritforge/analytics/job/Main.scala",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-02-26T14:08:53Z",
      "side": 1,
      "message": "Good catch :-) Shall we have it as separate Change and merge it quickly?",
      "range": {
        "startLine": 40,
        "startChar": 12,
        "endLine": 40,
        "endChar": 22
      },
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d593833_cac17cf1",
        "filename": "src/main/scala/com/gerritforge/analytics/job/Main.scala",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-01T00:34:32Z",
      "side": 1,
      "message": "ok done in  a separate change. see 163291",
      "parentUuid": "c1dae053_32710a77",
      "range": {
        "startLine": 40,
        "startChar": 12,
        "endLine": 40,
        "endChar": 22
      },
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d9a135b_c4286fb2",
        "filename": "src/main/scala/com/gerritforge/analytics/model/GerritEndpointConfig.scala",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-02-26T10:35:20Z",
      "side": 1,
      "message": "Where is this used?",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b169e428_f48b2ad3",
        "filename": "src/main/scala/com/gerritforge/analytics/model/GerritEndpointConfig.scala",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-01T00:34:32Z",
      "side": 1,
      "message": "when you specify \u003cboolean\u003e.option(\"true\") scalaz does implicitly convert to None if boolean is null or Option[\"true\"] if it is specified and not false. see https://stackoverflow.com/questions/19690531/scala-boolean-to-option for details. Unsure how this can be done with cats",
      "parentUuid": "1d9a135b_c4286fb2",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5603fed_75b9625c",
        "filename": "src/main/scala/com/gerritforge/analytics/model/GerritEndpointConfig.scala",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-03-02T00:00:17Z",
      "side": 1,
      "message": "True...sorry I missed it :/",
      "parentUuid": "b169e428_f48b2ad3",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "daa6926e_ab83ccb3",
        "filename": "src/main/scala/com/gerritforge/analytics/model/GerritEndpointConfig.scala",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-03-02T00:00:17Z",
      "side": 1,
      "message": "Can we just pass the boolean ? We are defaulting it anyway if not defined.",
      "range": {
        "startLine": 40,
        "startChar": 26,
        "endLine": 40,
        "endChar": 57
      },
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ff7ffaf_3ac08408",
        "filename": "src/main/scala/com/gerritforge/analytics/model/GerritEndpointConfig.scala",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-02T00:17:39Z",
      "side": 1,
      "message": "No, the problem here is that we have a boolean from java which can be\ntrue, false, or null\nthe way I put this adds the string true only if original parameter was specified (and this can be only true since it was Optional[Unit] from scopt).\nThe very first version of this scopt I did exactly what you are suggesting: just having a boolean flag, but Stefano did ask for a simple --extract-branches without parameters instead of --extract-branches\u003dtrue as I did at first. I originally did a simple if else, but Luca pointed me to this use case made by Optional extension that we can do with a simple class. I will show it better in next change.\nIf you have a better way to set it up this behaviour, we can obviously set it up. :)",
      "parentUuid": "daa6926e_ab83ccb3",
      "range": {
        "startLine": 40,
        "startChar": 26,
        "endLine": 40,
        "endChar": 57
      },
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2c0dcf2_a2ca671f",
        "filename": "src/test/scala/com/gerritforge/analytics/GerritAnalyticsTransformationsSpec.scala",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-02-26T10:35:20Z",
      "side": 1,
      "message": "Shall we add a test specifically for the new feature rather than making the existent one testing more things ?",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4c9eb7a_fb06cb1c",
        "filename": "src/test/scala/com/gerritforge/analytics/GerritAnalyticsTransformationsSpec.scala",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-02-26T14:08:53Z",
      "side": 1,
      "message": "Yes, agreed: one test \u003d one thing.",
      "parentUuid": "e2c0dcf2_a2ca671f",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94689687_d9e9e30f",
        "filename": "src/test/scala/com/gerritforge/analytics/GerritAnalyticsTransformationsSpec.scala",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-01T00:34:32Z",
      "side": 1,
      "message": "Will do in a separate chang, after merging the 163291 and 163330.",
      "parentUuid": "f4c9eb7a_fb06cb1c",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74b997cd_1c1bfa37",
        "filename": "src/test/scala/com/gerritforge/analytics/GerritAnalyticsTransformationsSpec.scala",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-02-26T10:35:20Z",
      "side": 1,
      "message": "Question for my benefit :P Why do we beed a mutable data structure here?",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f3f4850_3c2e09e7",
        "filename": "src/test/scala/com/gerritforge/analytics/GerritAnalyticsTransformationsSpec.scala",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1023193
      },
      "writtenOn": "2018-03-01T00:34:32Z",
      "side": 1,
      "message": "to be able to do such kind of assertion we must have mutable.WrappedArrays. In the change I will submit tomorrow will set a function to do this in a more readable way.",
      "parentUuid": "74b997cd_1c1bfa37",
      "revId": "984e7d46a92cf0e45ef5806e7d04eb5a36b199e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}