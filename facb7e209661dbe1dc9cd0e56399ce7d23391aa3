{
  "comments": [
    {
      "key": {
        "uuid": "1e4e9d12_380aaa63",
        "filename": "gitcommits/src/main/scala/com/gerritforge/analytics/gitcommits/job/Main.scala",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-12T14:48:39Z",
      "side": 1,
      "message": "I think this should be passed via a configuration file rather than being a cli option.\nThe reason is because there\u0027s no clear way to track back in history why a commit was considered \"bot-like\".\nThis won\u0027t be so much of a problem if the ETL rebuild the historic data every time it runs",
      "range": {
        "startLine": 86,
        "startChar": 6,
        "endLine": 88,
        "endChar": 153
      },
      "revId": "facb7e209661dbe1dc9cd0e56399ce7d23391aa3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c1237ec_8170efea",
        "filename": "gitcommits/src/main/scala/com/gerritforge/analytics/gitcommits/job/Main.scala",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-12T15:56:36Z",
      "side": 1,
      "message": "mmm Interesting point, my 2 cents:\n\nPassing the parameter from a file doesn\u0027t automatically make it trackable from history (i.e. --bot-like-regexp\u003d/tmp/foo.csv, where /tmp/foo is not in any revision control).\nThe usage of the ETL should be independent of any revision control and we should not make assumptions on where those configuration files come from.\n\n*Should* the ETL user want to track in history what set of regular expressions were used, then it would be up to that user to check-in the regexps in a repository, as we did here for gerrithub:\nhttps://review.gerrithub.io/c/GerritForge/gerrithub/+/447807\n\n\u003e This won\u0027t be so much of a problem if the ETL rebuild the historic data every time it runs\nyes, this is actually the case for gerrithub, but we can\u0027t assume all users would do this, they might decide to do incremental imports of the data, for example.\n\nIf you think we should be persisting *in elasticsearch*, what the regular expressions we used to flag those commits as bot-like, then that would be an interesting, though different story.\n\nPerhaps let\u0027s talk about this f2f :)",
      "parentUuid": "1e4e9d12_380aaa63",
      "range": {
        "startLine": 86,
        "startChar": 6,
        "endLine": 88,
        "endChar": 153
      },
      "revId": "facb7e209661dbe1dc9cd0e56399ce7d23391aa3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72acaf72_718ac24f",
        "filename": "gitcommits/src/main/scala/com/gerritforge/analytics/gitcommits/job/Main.scala",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-12T17:42:17Z",
      "side": 1,
      "message": "Makes sense what you\u0027re saying. I hadn\u0027t seen the change above. It makes sense that it\u0027s tracked by whoever calls the ETL.",
      "parentUuid": "0c1237ec_8170efea",
      "range": {
        "startLine": 86,
        "startChar": 6,
        "endLine": 88,
        "endChar": 153
      },
      "revId": "facb7e209661dbe1dc9cd0e56399ce7d23391aa3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bd19c01_f5b912b8",
        "filename": "gitcommits/src/main/scala/com/gerritforge/analytics/gitcommits/job/Main.scala",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2019-03-13T08:11:00Z",
      "side": 1,
      "message": "In addition to what Tony said, the same logic applies to all the other parameters which are expecting a file as inputs (i.e.: company/author aliasing), hence it makes sense to treat them consistently.",
      "parentUuid": "72acaf72_718ac24f",
      "range": {
        "startLine": 86,
        "startChar": 6,
        "endLine": 88,
        "endChar": 153
      },
      "revId": "facb7e209661dbe1dc9cd0e56399ce7d23391aa3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d97e770_8320fac5",
        "filename": "gitcommits/src/main/scala/com/gerritforge/analytics/gitcommits/plugin/ProcessGitCommitsCommand.scala",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2019-03-13T08:11:00Z",
      "side": 1,
      "message": "\"matching all of these\" maybe is clearer?",
      "range": {
        "startLine": 63,
        "startChar": 109,
        "endLine": 63,
        "endChar": 123
      },
      "revId": "facb7e209661dbe1dc9cd0e56399ce7d23391aa3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}