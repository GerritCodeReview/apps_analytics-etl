{
  "comments": [
    {
      "key": {
        "uuid": "1210331e_7daf8486",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/broadcast/GerritAccounts.scala",
        "patchSetId": 9
      },
      "lineNbr": 11,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-12-13T11:47:35Z",
      "side": 1,
      "message": "Is it possible to add a custom serialiser and call this accountId for consistency ?",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 11,
        "endChar": 36
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86e825d9_4e193c00",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/broadcast/GerritAccounts.scala",
        "patchSetId": 9
      },
      "lineNbr": 11,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2018-12-13T19:06:23Z",
      "side": 1,
      "message": "Yep, I have done that now",
      "parentUuid": "1210331e_7daf8486",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 11,
        "endChar": 36
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db9ce39b_e44db3b4",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/broadcast/GerritAccounts.scala",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-12-13T11:47:35Z",
      "side": 1,
      "message": "The name seems a bit confusing. GerritAccounts leads me to thinks that is a collection of GerritAccount, but it isn\u0027t. Shall we rename ti to something else? Maybe GerritAccountIds ?",
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68c1704c_31c6c0d2",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/broadcast/GerritAccounts.scala",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2018-12-13T19:06:23Z",
      "side": 1,
      "message": "I renamed GerritAccounts to GerritUserIdentifiers for clarity.\nAlso, the `GerritAccount` case class was does not need to be public, because it is only used for deserialization, so I scoped into GerritUserIdentifiers companion object.",
      "parentUuid": "db9ce39b_e44db3b4",
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70285fc6_d84bfa35",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/model/CommandLineArguments.scala",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-12-13T12:46:13Z",
      "side": 1,
      "message": "nit: shall we call it eventsURI? Events could come from a URL. Or maybe we can leave it for the moment and refactor later.",
      "range": {
        "startLine": 31,
        "startChar": 26,
        "endLine": 31,
        "endChar": 36
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bf5d7bc_c57523c5",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/model/CommandLineArguments.scala",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2018-12-13T19:06:23Z",
      "side": 1,
      "message": "Yes, all the arguments could do with more strict rules.\n- `gerritUrl` should be a URL,\n- `since` should be less than `until`, and when specified.\n- `eventsTimeAggregation` an enum\n\nHaving said that, I don\u0027t think we should spend too much time on this. an invalid field would lead to failure anyway, and the fields are documented.",
      "parentUuid": "70285fc6_d84bfa35",
      "range": {
        "startLine": 31,
        "startChar": 26,
        "endLine": 31,
        "endChar": 36
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4d12536_a0b6b130",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/model/CommandLineArguments.scala",
        "patchSetId": 9
      },
      "lineNbr": 45,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-12-13T12:46:13Z",
      "side": 1,
      "message": "might be worth specifying which date format we accept?",
      "range": {
        "startLine": 45,
        "startChar": 16,
        "endLine": 45,
        "endChar": 90
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7f963bb_efd00dc0",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/model/CommandLineArguments.scala",
        "patchSetId": 9
      },
      "lineNbr": 45,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2018-12-13T19:06:23Z",
      "side": 1,
      "message": "Yep, might be useful, I\u0027ll do that",
      "parentUuid": "c4d12536_a0b6b130",
      "range": {
        "startLine": 45,
        "startChar": 16,
        "endLine": 45,
        "endChar": 90
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52823366_8dea2bdb",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/spark/sql/udf/SparkExtractors.scala",
        "patchSetId": 9
      },
      "lineNbr": 27,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-12-13T12:46:13Z",
      "side": 1,
      "message": "Are we handling this exception to avoid stopping the ETL in case just one entry is broken ?",
      "range": {
        "startLine": 27,
        "startChar": 35,
        "endLine": 27,
        "endChar": 69
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08233632_0a8ea6b7",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/spark/sql/udf/SparkExtractors.scala",
        "patchSetId": 9
      },
      "lineNbr": 27,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2018-12-13T19:06:23Z",
      "side": 1,
      "message": "No we are not, this is a good point.\nPerhaps we could return an Option[String] instead?\nAn alternative is that we log an error and then extract the access path as it is.\nThoughts?",
      "parentUuid": "52823366_8dea2bdb",
      "range": {
        "startLine": 27,
        "startChar": 35,
        "endLine": 27,
        "endChar": 69
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "915160b8_f3faf1d8",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/spark/sql/udf/SparkExtractors.scala",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-12-13T12:46:13Z",
      "side": 1,
      "message": "Are we returning Some(null) in this case ? Shall we instead return an empty string ?",
      "range": {
        "startLine": 34,
        "startChar": 88,
        "endLine": 34,
        "endChar": 153
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d02cd974_3cac0086",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/spark/sql/udf/SparkExtractors.scala",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2018-12-13T19:06:23Z",
      "side": 1,
      "message": "I think null is fine. This is dealt with a by dataframe, and null values are valid in the SQL-like representation. null is what you get when you deal with None for example.\nWhat do you think?",
      "parentUuid": "915160b8_f3faf1d8",
      "range": {
        "startLine": 34,
        "startChar": 88,
        "endLine": 34,
        "endChar": 153
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af2a0aac_c7ed2906",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/spark/sql/udf/SparkExtractors.scala",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2018-12-13T12:46:13Z",
      "side": 1,
      "message": "Are we handling this exception to avoid stopping the ETL in case just one entry is broken ?",
      "range": {
        "startLine": 38,
        "startChar": 35,
        "endLine": 38,
        "endChar": 69
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd4fdbda_1d7a2812",
        "filename": "auditlog/src/main/scala/com/gerritforge/analytics/auditlog/spark/sql/udf/SparkExtractors.scala",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2018-12-13T19:06:23Z",
      "side": 1,
      "message": "See my previous comment",
      "parentUuid": "af2a0aac_c7ed2906",
      "range": {
        "startLine": 38,
        "startChar": 35,
        "endLine": 38,
        "endChar": 69
      },
      "revId": "3086fdb169ca5010afc0b1d72e6eb767cc85f467",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}