{
  "comments": [
    {
      "key": {
        "uuid": "453dbd4b_6a785e96",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-03-07T14:21:17Z",
      "side": 1,
      "message": "Remove the blank line here.",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27182283_a8666401",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-08T08:56:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "453dbd4b_6a785e96",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91358329_71a86fc0",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-07T09:41:53Z",
      "side": 1,
      "message": "Samuel wrote an ElasticSearch client https://github.com/sksamuel/elastic4s that might handle many use cases for us. Probably worthy a discussion with the rest of the community between getting a new dependency or writing ourselves",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb478e0b_64e38b22",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-07T11:50:45Z",
      "side": 1,
      "message": "Are you sure we actually need to write a new ES client from scratch?\nAre there not libraries out there that already do this?\nDoesn\u0027t the spark elasticsearch connector already support this? https://www.elastic.co/guide/en/elasticsearch/hadoop/master/spark.html\n\nCan you convince us this is actually needed? :P",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ce250e3_71a48a8c",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-08T08:56:16Z",
      "side": 1,
      "message": "Agree, we can use an existing client like elastic4s.\n\nIn regards to the Hadoop/Spark ES connector, I\u0027ve tried various things.\nFirst tried to use the available spark DSL \u0027saveToEs\u0027, then tried to use directly their org.elasticsearch.hadoop.rest.RestClient but with none of these options I was able to find a way to modify the aliases.",
      "parentUuid": "fb478e0b_64e38b22",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "051747a2_ba02b755",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-13T10:42:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91358329_71a86fc0",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6e805cd_a34ec65e",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-13T10:42:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ce250e3_71a48a8c",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81482d64_b8443dde",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-07T09:41:53Z",
      "side": 1,
      "message": "Is this handling errors or are we returning a BufferedSource also when we have a 500 or 404 from the server, just returning the response body?",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4efaf9cd_85e14b2b",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-08T08:56:16Z",
      "side": 1,
      "message": "No it\u0027s not handling 500 or 404, it\u0027s just returning the response body. But I assume most of this logic will change once I move to elastic4s",
      "parentUuid": "81482d64_b8443dde",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef6946b0_fb24df16",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-07T11:50:45Z",
      "side": 1,
      "message": "Perhaps BufferedSource is not the ideal return type for this method: we use it only once and we immediately mkString the result",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74492408_b3f6d7b6",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-08T08:56:16Z",
      "side": 1,
      "message": "Agree",
      "parentUuid": "ef6946b0_fb24df16",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2b4fe4f_503ba32c",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-07T11:50:45Z",
      "side": 1,
      "message": "This being scala, perhaps we can expose failures in the signatures and avoid dealing with exceptions?",
      "range": {
        "startLine": 76,
        "startChar": 1,
        "endLine": 77,
        "endChar": 54
      },
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e825b25_39df30e7",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-08T08:56:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b2b4fe4f_503ba32c",
      "range": {
        "startLine": 76,
        "startChar": 1,
        "endLine": 77,
        "endChar": 54
      },
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3907786a_0ef802c0",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 99,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-07T11:50:45Z",
      "side": 1,
      "message": "*If* we do implement alias handling ourselves can we do so by using a higher level API rather than dealing with json payloads directly?",
      "range": {
        "startLine": 93,
        "startChar": 1,
        "endLine": 99,
        "endChar": 0
      },
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b611bff_d296cfd9",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 99,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-08T08:56:16Z",
      "side": 1,
      "message": "Agree",
      "parentUuid": "3907786a_0ef802c0",
      "range": {
        "startLine": 93,
        "startChar": 1,
        "endLine": 99,
        "endChar": 0
      },
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eefd066_71fab4ca",
        "filename": "common/src/main/scala/com/gerritforge/analytics/common/api/esRestAPIOperations.scala",
        "patchSetId": 7
      },
      "lineNbr": 99,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-13T10:42:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b611bff_d296cfd9",
      "range": {
        "startLine": 93,
        "startChar": 1,
        "endLine": 99,
        "endChar": 0
      },
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "344736d9_095e4f18",
        "filename": "common/src/test/scala/com/gerritforge/analytics/SparkTestSupport.scala",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-07T11:50:45Z",
      "side": 1,
      "message": "Why do we need this?\nShould this not be set/unset by the user, with more knowledge of their specific environment, via --conf argument instead?",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1ca062d_4b92f4de",
        "filename": "common/src/test/scala/com/gerritforge/analytics/SparkTestSupport.scala",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-08T08:56:16Z",
      "side": 1,
      "message": "This is the spark session used in the unit tests\n\nThis option was required to get spark to connect to elasticsearch in docker. I will try to remove this option when I use the ES embedded version suggested by @stefano for our unit tests",
      "parentUuid": "344736d9_095e4f18",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cda0e49d_40fb7494",
        "filename": "common/src/test/scala/com/gerritforge/analytics/SparkTestSupport.scala",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-13T10:42:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1ca062d_4b92f4de",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "627269cb_44ac12cf",
        "filename": "common/src/test/scala/com/gerritforge/analytics/infrastructure/ElasticSearchPimpedWriterIT.scala",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-07T09:41:53Z",
      "side": 1,
      "message": "Are you starting an embedded ElasticSearch instance? I don\u0027t see the code. Have a look at the code written by this guy :-) https://github.com/galarragas/event-aggregator/blob/master/src/it/scala/com/pragmasoft/eventaggregator/support/ElasticsearchContainer.scala",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52085e05_55924d29",
        "filename": "common/src/test/scala/com/gerritforge/analytics/infrastructure/ElasticSearchPimpedWriterIT.scala",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-13T21:46:12Z",
      "side": 1,
      "message": "Using now the docker-containers, ES is not supporting anymore the embedded node",
      "parentUuid": "627269cb_44ac12cf",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c16a0117_27aef5c9",
        "filename": "gitcommits/src/main/scala/com/gerritforge/analytics/gitcommits/job/Main.scala",
        "patchSetId": 7
      },
      "lineNbr": 134,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-07T09:41:53Z",
      "side": 1,
      "message": "let\u0027s change the log to say that we are doing swap, it would be nice to show the real index name too if easy/possible",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "656339c7_f29ebe7c",
        "filename": "gitcommits/src/main/scala/com/gerritforge/analytics/gitcommits/job/Main.scala",
        "patchSetId": 7
      },
      "lineNbr": 134,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-13T21:46:12Z",
      "side": 1,
      "message": "Done. I\u0027ve moved this into the ElasticSearchPimpedWriter class, which will include all the information",
      "parentUuid": "c16a0117_27aef5c9",
      "revId": "ea67ce21134f211e2ca2dd8ef696c763a867728a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}